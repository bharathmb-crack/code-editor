{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","displayName","language","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeOut","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOA4CeA,MAlCf,SAAgBC,GACd,IAAQC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACtC,EAAwBC,oBAAS,GAAK,mBAA/BC,EAAI,KAAEC,EAAO,KAIpB,OACE,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAc,UAC5D,sBAAKE,UAAU,eAAc,UAC1BP,EACD,yBACEQ,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAACI,GAAQ,OAAMA,CAAQ,GAAC,EAAC,UAEhD,cAAC,IAAe,CAACC,KAAMN,EAAOO,IAAgBC,MAAgB,UAGlE,cAAC,aAAgB,CACfC,eAhBN,SAAsBC,EAAQC,EAAMd,GAClCC,EAASD,EACX,EAeMA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMnB,EACNoB,MAAO,WACPC,aAAa,OAKvB,EChBeC,EAtBS,SAACC,EAAKC,GAC5B,IAAMC,EAHO,gBAGgBF,EAE7B,EAA0BpB,oBAAS,WACjC,IAAMuB,EAAYC,aAAaC,QAAQH,GAEvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,CAEX,IAAE,mBAVKvB,EAAK,KAAE8B,EAAQ,KAgBtB,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,GACnD,GAAG,CAACwB,EAAaxB,IAEV,CAACA,EAAO8B,EACjB,ECsCeI,MAzDf,WACE,MAAwBb,EAAgB,OAAQ,IAAG,mBAA5Cc,EAAI,KAAEC,EAAO,KACpB,EAAsBf,EAAgB,MAAO,IAAG,mBAAzCgB,EAAG,KAAEC,EAAM,KAClB,EAAoBjB,EAAgB,KAAM,IAAG,mBAAtCkB,EAAE,KAAEC,EAAK,KAChB,EAA4BtC,mBAAS,IAAG,mBAAjCuC,EAAM,KAAEC,EAAS,KAiBxB,OAfAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,iCAAD,OAECP,EAAI,oCACFE,EAAG,qCACHE,EAAE,6BAEhB,GAAG,KAEH,OAAO,WACLM,aAAaF,EACf,CACF,GAAG,CAACR,EAAME,EAAKE,IAGb,qCACE,sBAAKlC,UAAU,gBAAe,UAC5B,cAAC,EAAM,CACLN,SAAS,MACTD,YAAY,OACZE,MAAOmC,EACPlC,SAAUmC,IAEZ,cAAC,EAAM,CACLrC,SAAS,MACTD,YAAY,MACZE,MAAOqC,EACPpC,SAAUqC,IAEZ,cAAC,EAAM,CACLvC,SAAS,aACTD,YAAY,KACZE,MAAOuC,EACPtC,SAAUuC,OAGd,qBAAKnC,UAAU,OAAM,SACnB,wBACEoC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,aAKjB,ECvDAC,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.2b0d0328.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/ayu-dark.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/css/css\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Editor(props) {\r\n  const { displayName, language, value, onChange } = props;\r\n  const [open, setOpen] = useState(true);\r\n  function handleChange(editor, data, value) {\r\n    onChange(value);\r\n  }\r\n  return (\r\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />{\" \"}\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: \"ayu-dark\",\r\n          lineNumbers: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"codepen-clone\";\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const prefixedKey = PREFIX + key;\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey);\r\n\r\n    if (jsonValue != null) return JSON.parse(jsonValue);\r\n\r\n    if (typeof initialValue === \"function\") {\r\n      return initialValue();\r\n    } else {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n  }, [prefixedKey, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Editor from \"./Editor\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nfunction App() {\r\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\r\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\r\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\r\n  const [srcDoc, setSrcDoc] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      setSrcDoc(`\r\n      <html>\r\n        <body>${html}</body>\r\n        <style> ${css}</style>\r\n        <script>${js}</script>\r\n      </html>`);\r\n    }, 250);\r\n\r\n    return () => {\r\n      clearTimeout(timeOut);\r\n    };\r\n  }, [html, css, js]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pane top-pane\">\r\n        <Editor\r\n          language=\"xml\"\r\n          displayName=\"HTML\"\r\n          value={html}\r\n          onChange={setHtml}\r\n        />\r\n        <Editor\r\n          language=\"css\"\r\n          displayName=\"CSS\"\r\n          value={css}\r\n          onChange={setCss}\r\n        />\r\n        <Editor\r\n          language=\"javascript\"\r\n          displayName=\"JS\"\r\n          value={js}\r\n          onChange={setJs}\r\n        />\r\n      </div>\r\n      <div className=\"pane\">\r\n        <iframe\r\n          srcDoc={srcDoc}\r\n          title=\"output\"\r\n          sandbox=\"allow-scripts\"\r\n          frameBorder=\"0\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}